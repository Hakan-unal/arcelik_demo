{"version":3,"sources":["redux/constants/index.js","redux/reducers.js","redux/promodex/reducers.js","redux/store.js","pages/404/404.js","redux/promodex/actions.js","services/axios.js","pages/login/SubTask.js","pages/login/Login.js","pages/login/api.js","pages/login/LoginContent.js","components/layout/layout.js","pages/login/LoginRegisterLayout.js","pages/landingPage/LandingPageContent.js","pages/landingPage/LandingPageLayout.js","routes/ScrollToTop.jsx","index.js"],"names":["REDUX_CHANGED","reducers","combineReducers","inlineInformation","action","type","logger","createLogger","Login","props","status","title","subTitle","extra","to","setInlineRedux","base","apiBase","axios","create","baseURL","SubTask","useState","isFirstPage","setIsFirstPage","tasks","setTasks","subTasks","setSubTasks","uniqueSubTasks","setUniqueSubTasks","taskInput","setTaskInput","activeTaskId","setActiveTaskId","subTaskInput","setSubTaskInput","handleGetSubtaskCountOnlyCheck","id","tempArr1","filter","data","taskID","tempArr2","check","length","handleSubTaskCheckbox","tempArr","uniqueTempArr","tempIndex","findIndex","uniqueIndex","useEffect","JSON","parse","localStorage","getItem","loading","map","task","index","name","onClick","handleTaskDetail","onChange","event","target","value","obj","parseInt","Math","random","push","setItem","stringify","handleSaveTask","uniqueSubTask","defaultChecked","checked","handleSaveSubTask","repos","setRepos","handleParseUrl","code","URL","window","location","href","searchParams","get","payload","post","headers","then","response","catch","error","getUserData","key","html_url","topics","topic","description","handleSetData","console","log","sm","size","dataSource","columns","dataIndex","connect","globalState","withRouter","align","span","offset","md","Content","Layout","indicator","LoadingOutlined","spin","spinning","className","content","LoginRegisterLayout","page","require","redirect","LandingPageContent","color","LandingPageLayout","ScrollToTop","useLocation","scrollTo","children","routes","store","initialState","middlewares","createStore","applyMiddleware","configureStore","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2940809c.chunk.js","sourcesContent":["// PROMODEX CONSTANTS\nexport const ADD_ROOM = \"ADD_ROOM\";\nexport const REDUX_CHANGED = \"Inline Redux Changed, Happy Coding:)\";\n","import { combineReducers } from \"redux\";\nimport { inlineInformation } from \"./promodex/reducers\";\n\nconst reducers = combineReducers({\n  inlineInformation: inlineInformation,\n});\n\nexport default reducers;\n","import { ADD_ROOM, REDUX_CHANGED } from \"../constants\";\n\nexport const selectedRoomsReducer = (rooms = [], action) => {\n  if (action.type === ADD_ROOM) {\n    rooms = action.rooms;\n\n    return rooms;\n  }\n\n  return rooms;\n};\n\nexport const inlineInformation = (\n  inlineInformation = null,\n  action\n) => {\n  if (action.type === REDUX_CHANGED) {\n    inlineInformation = {\n      ...inlineInformation,\n      ...action.inlineInformation,\n    };\n\n    return inlineInformation;\n  }\n\n  return inlineInformation;\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport reducers from './reducers';\n\nconst logger = createLogger();\n\nexport function configureStore(initialState) {\n\n    const middlewares = [logger];\n\n    const store = createStore(\n        reducers,\n        initialState,\n        applyMiddleware(...middlewares)\n    );\n\n    return store;\n}\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Result } from 'antd';\n\nconst Login = (props) => {\n  return (\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle=\"Sayfa Bulunamadı\"\n      extra={<Link to=\"/\" type=\"primary\">Anasayfa'ya dönmek için tıklayın</Link>}\n    />\n  )\n}\n\n\n\nexport default Login\n","import { ADD_ROOM, REDUX_CHANGED } from \"../constants/\";\n\nexport const setSelectedRooms = (rooms) => {\n  return {\n    type: ADD_ROOM,\n    rooms: rooms,\n  };\n};\n\nexport const setInlineRedux = (inlineInformation) => {\n  return {\n    type: REDUX_CHANGED,\n    inlineInformation: inlineInformation,\n  };\n};\n","import axios from 'axios';\nimport config from './config.json';\n\n\nconst base = config.apiBase;\n\nexport const protectedApi = axios.create({\n    baseURL: base\n});\n\nexport const publicApi = axios.create({\n    baseURL: base,\n})\n","import React, { useEffect, useState } from 'react';\nimport { Button, Input, Checkbox } from \"antd\";\n\n\n\nconst SubTask = (props) => {\n    const [isFirstPage, setIsFirstPage] = useState(true)\n\n    const [tasks, setTasks] = useState([])\n    const [subTasks, setSubTasks] = useState([])\n    const [uniqueSubTasks, setUniqueSubTasks] = useState([])\n\n    const [taskInput, setTaskInput] = useState(\"\")\n    const [activeTaskId, setActiveTaskId] = useState(null)\n\n    const [subTaskInput, setSubTaskInput] = useState(\"\")\n\n\n\n    const loading = () => {\n        const tasks = JSON.parse(localStorage.getItem(\"tasks\"))\n        const subTasks = JSON.parse(localStorage.getItem(\"subTasks\"))\n\n        if (tasks === null) setTasks([])\n        else setTasks(tasks)\n        if (subTasks === null) setSubTasks([])\n        else setSubTasks(subTasks)\n\n    }\n\n    const handleGetSubtaskCount = (taskID) => {\n        const tempArr = subTasks.filter(data => data.taskID === taskID && data.check === false)\n        return tempArr.length\n\n    }\n\n    const handleTaskDetail = (id) => {\n        setIsFirstPage(false)\n        setActiveTaskId(id)\n        const tempArr = subTasks.filter(data => data.taskID === id)\n        setUniqueSubTasks(tempArr)\n    }\n\n    const handleSaveTask = () => {\n        const tempArr = [...tasks];\n        const obj = {\n            id: parseInt(Math.random() * 1000000),\n            name: taskInput,\n        }\n        tempArr.push(obj)\n        setTasks(tempArr)\n        localStorage.setItem(\"tasks\", JSON.stringify(tempArr))\n        setTaskInput(\"\")\n    }\n\n    const handleSaveSubTask = () => {\n        const tempArr = [...subTasks];\n        const uniqueTempArr = [...uniqueSubTasks];\n\n        const obj = {\n            id: parseInt(Math.random() * 1000000),\n            name: subTaskInput,\n            taskID: activeTaskId,\n            check: false\n        }\n        tempArr.push(obj)\n        uniqueTempArr.push(obj)\n        setSubTasks(tempArr)\n        setUniqueSubTasks(uniqueTempArr)\n        localStorage.setItem(\"subTasks\", JSON.stringify(tempArr))\n        setSubTaskInput(\"\")\n    }\n\n    const handleGetSubtaskCountOnlyCheck = (id) => {\n        const tempArr1 = subTasks.filter(data => data.taskID === id)\n        const tempArr2 = subTasks.filter(data => data.taskID === id && data.check === true)\n        const tempArr3 = subTasks.filter(data => data.taskID === id && data.check === false)\n\n        if (tempArr1.length === 0) return 1\n        if (tempArr1.length === tempArr2.length) return 0\n        if (tempArr1.length !== tempArr2.length) return 1\n\n    }\n\n\n    const handleSubTaskCheckbox = (check, id) => {\n        const tempArr = [...subTasks];\n        const uniqueTempArr = [...uniqueSubTasks];\n\n\n        const tempIndex = tempArr.findIndex(data => data.id === id)\n        const uniqueIndex = uniqueTempArr.findIndex(data => data.id === id)\n\n        tempArr[tempIndex] = {\n            ...tempArr[tempIndex],\n            check: check\n        }\n\n        uniqueTempArr[uniqueIndex] = {\n            ...uniqueTempArr[uniqueIndex],\n            check: check\n        }\n\n        setUniqueSubTasks(uniqueTempArr)\n        setSubTasks(tempArr)\n\n\n    }\n    useEffect(() => {\n        loading()\n    }, [])\n\n\n\n    return <div>\n        {isFirstPage ?\n            <>\n                TODO\n                <ul>\n                    {tasks.map((task, index) => {\n                        return (<li key={index}>{handleGetSubtaskCountOnlyCheck(task.id) === 0 ? <del>{task.name}</del> : task.name} <Button onClick={() => handleTaskDetail(task.id)}>Detay({handleGetSubtaskCount(task.id)})</Button></li>)\n                    })}\n                </ul>\n                <Input onChange={(event) => setTaskInput(event.target.value)} value={taskInput} type=\"text\" />\n                <Button onClick={() => handleSaveTask()}>Ekle</Button>\n            </>\n            :\n            <>\n                <Button onClick={() => setIsFirstPage(true)}>Geri Dön</Button>\n                <ul>\n                    {uniqueSubTasks.map((uniqueSubTask, index) => {\n                        if (uniqueSubTask.check === false) {\n                            return (<li key={index}>{uniqueSubTask.name} <Checkbox defaultChecked={uniqueSubTask.check} onChange={(event) => handleSubTaskCheckbox(event.target.checked, uniqueSubTask.id)} /> </li>)\n                        } else {\n                            return null\n                        }\n                    })}\n                </ul>\n                <ul>\n                    -Completed-\n                    {uniqueSubTasks.map((uniqueSubTask, index) => {\n                        if (uniqueSubTask.check === true) {\n                            return (<li key={index}>{uniqueSubTask.name} <Checkbox defaultChecked={uniqueSubTask.check} onChange={(event) => handleSubTaskCheckbox(event.target.checked, uniqueSubTask.id)} /> </li>)\n                        } else {\n                            return null\n                        }\n                    })}\n                </ul>\n                <Input onChange={(event) => setSubTaskInput(event.target.value)} value={subTaskInput} type=\"text\" />\n                <Button onClick={() => handleSaveSubTask()}>Ekle</Button>\n            </>\n        }\n    </div>\n\n}\n\n\n\nexport default SubTask","import React, { useEffect, useState } from 'react';\nimport { Col, Row, Table } from \"antd\";\nimport { getUserData } from \"./api\"\nimport SubTask from \"./SubTask\"\n\n\n\nconst Login = (props) => {\n\n    const [repos, setRepos] = useState([])\n\n\n    const handleSetData = (repos) => {\n        const tempArr = repos.map((data, index) => {\n            return {\n                key: index,\n                name: data.name,\n                html_url: data.html_url,\n                topics: data.topics.map(topic => topic + \" \"),\n                description: data.description\n            }\n        })\n        setRepos(tempArr)\n    }\n\n    const handleParseUrl = () => {\n        const parsedUrl = new URL(window.location.href)\n        const code = parsedUrl.searchParams.get(\"code\")\n\n        const payload = {\n            code: code,\n        }\n        getUserData(code, payload)\n            .then((response) => {\n                handleSetData(response)\n            })\n            .catch((error) => console.log(error))\n    }\n\n    useEffect(() => {\n        handleParseUrl()\n    }, [])\n\n    const columns = [\n        {\n            title: 'Repo Adı',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Açıklama',\n            dataIndex: 'description',\n            key: 'description',\n        },\n        {\n            title: 'Tags',\n            dataIndex: 'topics',\n            key: 'topics',\n        },\n    ];\n\n\n    return <Row>\n        <Col sm={11}>\n            <Table size='small' dataSource={repos} columns={columns} />\n        </Col>\n        <Col sm={2}>\n        </Col>\n        <Col sm={11}>\n\n            <SubTask />\n        </Col>\n\n    </Row>\n\n}\n\n\n\nexport default Login","import { publicApi } from '../../services/axios'\n\nimport axios from \"axios\"\n\n\nexport const getUserData = (code, payload) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE\"\n        }\n    }\n    return axios.post('https://arcelik-demo.vercel.app/authenticate', payload, config)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => {\n            return error;\n        });\n}\n\n","import { Col, Row } from 'antd';\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setInlineRedux } from \"../../redux/promodex/actions\";\nimport Login from './Login';\n\n\n\nconst LoginContent = (props) => {\n\n\n\n\n  return <div >\n    <Row align=\"bottom\" >\n\n      <Col sm={{ span: 24, offset: 0 }} md={{ span: 24, offset: 0 }}  >\n        <Login />\n      </Col>\n\n    </Row>\n  </div>;\n}\n\n\n\nconst mapState = (globalState) => {\n  return { inlineInformation: globalState.inlineInformation };\n};\nexport default connect(mapState, { setInlineRedux })(withRouter(LoginContent));","import React from 'react';\nimport { Spin, Layout, } from \"antd\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setInlineRedux } from \"../../redux/promodex/actions\";\n\n\nconst InlineLayout = (props) => {\n    const { Content } = Layout\n\n    return (\n        <div>\n            <Spin indicator={<LoadingOutlined spin />} spinning={false}>\n\n                <Layout className=\"site-layout-background\"   >\n                    <Content>\n                        {props.content}\n                    </Content>\n                </Layout>\n\n            </Spin >\n        </div >\n    );\n}\n\nconst mapState = (globalState) => {\n    return { inlineInformation: globalState.inlineInformation };\n};\nexport default connect(mapState, { setInlineRedux })(withRouter(InlineLayout));","import React from 'react';\nimport LoginContent from './LoginContent';\nimport InlineLayout from '../../components/layout/layout';\n\n\n\n\n\nconst LoginRegisterLayout = (props) => {\n\n    return (\n        <InlineLayout page='LoginContent' content={< LoginContent />} />\n    )\n\n}\n\n\nexport default LoginRegisterLayout\n","import React, { useEffect, useState } from 'react';\nimport { AiFillGithub } from \"react-icons/ai\";\nimport LandingPageLayout from \"../login/LoginRegisterLayout\"\n\nconst { id, redirect } = require(\"../../config.json\");\n\n\nconst LandingPageContent = (props) => {\n  const [isFirstPage, setIsFirstPage] = useState(true)\n\n  useEffect(() => {\n    const parsedUrl = new URL(window.location.href)\n    const code = parsedUrl.searchParams.get(\"code\")\n    if (code !== null) {\n      setIsFirstPage(false)\n    }\n  }, [])\n\n  return (<div>\n    {isFirstPage ?\n      <a href={`https://github.com/login/oauth/authorize?scope=user&client_id=${id}&redirect_uri=${redirect}`}><AiFillGithub size={100} color=\"black\" /></a>\n      :\n      <LandingPageLayout />\n    }\n  </div>\n  )\n}\n\n\nexport default LandingPageContent\n","import React from 'react';\nimport LandingPageContent from './LandingPageContent';\nimport Layout from '../../components/layout/layout';\n\n\n\n\nconst LandingPageLayout = (props) => {\n\n    return (\n        <Layout page='LandingPageContent' content={<LandingPageContent />} />\n    )\n\n}\n\nexport default LandingPageLayout\n","// ScrollToTop.jsx\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\n\nconst ScrollToTop = (props) => {\n  const location = useLocation();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return <>{props.children}</>\n};\n\nexport default ScrollToTop;","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"../src/assets/css/styles.css\"\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { configureStore } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\n\nimport Page404 from \"./pages/404/404.js\";\nimport LandingPageLayout from \"./pages/landingPage/LandingPageLayout.js\";\nimport LoginRegisterLayout from \"./pages/login/LoginRegisterLayout.js\";\nimport ScrollToTop from \"./routes/ScrollToTop\";\n\n\n\n\nconst routes = (\n  <Provider store={configureStore()}>\n    <BrowserRouter>\n      <ScrollToTop>\n        <Switch>\n          <Route exact path=\"/\" component={LandingPageLayout} />\n          <Route exact path=\"/login\" component={LoginRegisterLayout} />\n          <Route path=\"*\">\n            <Page404 />\n          </Route>\n        </Switch>\n\n      </ScrollToTop>\n    </BrowserRouter>\n  </Provider>\n\n);\nReactDOM.render(routes, document.querySelector(\"#root\"));\n"],"sourceRoot":""}